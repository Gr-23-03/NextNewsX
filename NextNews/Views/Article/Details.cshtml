@model NextNews.Models.Database.Article

@using Microsoft.AspNetCore.Identity
@using NextNews.Models.Database
@using NextNews.Services


@inject UserManager<User> _userManager
@inject IArticleService _articleService
@inject IUserService _userService

@{
    ViewData["Title"] = "Details";
    

}

<h1>Details</h1>

<div>
    <h4>Article</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateStamp)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateStamp)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LinkText)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LinkText)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.HeadLine)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.HeadLine)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ContentSummary)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ContentSummary)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd class = "col-sm-10">
            @Html.Raw(Model.Content)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Views)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Views)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Likes)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Likes)
        </dd>


        @if (Model.ImageLink != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ImageLink)
            </dt>
            <dd class="col-sm-10">
                <img src="@Html.DisplayFor(model => model.ImageLink)" alt="image" style="width: 100%" />
            </dd>
        }


        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AuthorName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AuthorName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Category.Id)
        </dd>

        @if (Model.ImageLink2 != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ImageLink2)
            </dt>
            <dd class="col-sm-10">
                <img src="@Html.DisplayFor(model => model.ImageLink2)" alt="image" style="width: 100%" />
            </dd>
        }

        @if (Model.ImageFile != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ImageFile)
            </dt>
            <dd class="col-sm-10">
                <img src="@Html.DisplayFor(model => model.ImageFile)" alt="image" style="width: 100%" />
        </dd>
        }


    </dl>
</div>



<div>
    

    <a class="btn btn-success" id="likeButton" data-id="@Model.Id" asp-action="Likes" asp-controller="Article" >Like</a>
   

    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> 
    <a asp-action="Index">Back to List</a>
</div>

<script>
    var isLiked = false; // Initialize the flag

    var likeButton = document.getElementById('likeButton');
    likeButton.addEventListener('click', function (event) {
        event.preventDefault(); // Prevent the default form submission behavior
        var articleId = this.getAttribute('data-id'); // Get article ID

        fetch('/Article/Likes?id=' + articleId,
            {
                method: 'POST'
            })
            .then(response => response.json())
            .then(data => {
                likeButton.innerHTML = isLiked ? 'Like' : 'Unlike';
                isLiked = !isLiked;
            })
            .catch(error => console.error('Error:', error));

        // if (isLiked) {
        //     likeButton.innerHTML = 'Like';
        //     // Additional logic for when the article is unliked
        // } else {
        //     likeButton.innerHTML = 'Unlike';
        //     // Additional logic for when the article is liked
        // }

        // isLiked = !isLiked; // Toggle the flag
    });
</script>

