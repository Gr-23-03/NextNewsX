
@{
    ViewData["Title"] = "GetStockData";
}
<h1>Summary of stock data</h1>

<canvas id="stockChart" width="800" height="400"></canvas>
<script>

    function fetchAndDrawStockGraph() {
        fetch('stock/getstockdata') // Adjust this URL to match your controller's route
            .then(response => response.json())
            .then(data => {
                const ctx = document.getElementById('stockChart').getContext('2d');
                new Chart(ctx, {
                    type: 'line', // Or 'bar', 'radar', etc., depending on your preference
                    data: {
                        labels: data.map(item => new Date(item.date).toLocaleDateString()), // Format the date as needed
                        datasets: [{
                            label: 'Stock Price',
                            data: data.map(item => item.price),
                            borderColor: 'rgb(75, 192, 192)',
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        }]
                    },
                    options: {
                        scales: {
                            xAxes: [{
                                type: 'time',
                                time: {
                                    parser: 'YYYY-MM-DD',
                                    tooltipFormat: 'll',
                                },
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Date'
                                }
                            }],
                            yAxes: [{
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Price'
                                }
                            }]
                        }
                    }
                });
            })
            .catch(error => console.error('Error fetching stock data:', error));
    }

    // Call the function when the page has loaded
    document.addEventListener('DOMContentLoaded', fetchAndDrawStockGraph);


</script>


<h1>Stock Data</h1>
<div id="stockChartsContainer"></div> <!-- Container for all charts -->

<script>

    function fetchAndDrawStockGraph() {
        fetch('stock/getstockdata') // Adjust this URL to match your controller's route
            .then(response => response.json())
            .then(data => {
                // Group data by company name
                const groupedByCompany = data.reduce((acc, item) => {
                    acc[item.name] = acc[item.name] || [];
                    acc[item.name].push(item);
                    return acc;
                }, {});

                const stockChartsContainer = document.getElementById('stockChartsContainer');
                stockChartsContainer.innerHTML = ''; // Clear existing charts

                // Create a chart for each company
                Object.keys(groupedByCompany).forEach((companyName, index) => {
                    const canvas = document.createElement('canvas');
                    canvas.id = `stockChart-${index}`;
                    canvas.width = 800;
                    canvas.height = 400;
                    stockChartsContainer.appendChild(canvas);

                    const ctx = canvas.getContext('2d');
                    new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: groupedByCompany[companyName].map(item => new Date(item.date).toLocaleDateString()),
                            datasets: [{
                                label: `${companyName} Stock Price`,
                                data: groupedByCompany[companyName].map(item => item.price),
                                borderColor: 'rgb(75, 192, 192)',
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            }]
                        },
                        options: {
                            scales: {
                                xAxes: [{
                                    type: 'time',
                                    time: {
                                        parser: 'YYYY-MM-DD',
                                        tooltipFormat: 'll',
                                    },
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Date'
                                    }
                                }],
                                yAxes: [{
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Price'
                                    }
                                }]
                            }
                        }
                    });
                });
            })
            .catch(error => console.error('Error fetching stock data:', error));
    }

    document.addEventListener('DOMContentLoaded', fetchAndDrawStockGraph);

</script>








